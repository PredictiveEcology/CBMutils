% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Python_ReticulateFindPython.R
\name{ReticulateFindPython}
\alias{ReticulateFindPython}
\title{Reticulate find Python}
\usage{
ReticulateFindPython(
  version,
  versionInstall = version,
  useGit = TRUE,
  prompt = FALSE,
  pyenvRoot = tools::R_user_dir("CBMutils"),
  pyenvOnly = FALSE
)
}
\arguments{
\item{version}{character. Python version or a comma separated list of version constraints.
See ?reticulate::virtualenv_starter 'version' argument}

\item{versionInstall}{character. Version to install if suitable version not found.
Defaults to 'version'. Required if 'version' is a string of versions constraints instead of a specific version.}

\item{useGit}{logical. Allow reticulate to clone pyenv-win if Git is available}

\item{prompt}{logical. Prompt user to approve download of pyenv-win tool}

\item{pyenvRoot}{character. Path to directory of where to download the pyenv-win tool}

\item{pyenvOnly}{logical. Exclude versions not within a pyenv install directory}
}
\value{
character. Path to Python interpreter
}
\description{
Use reticulate to find or install Python that meets version requirements.
Download the pyenv-win Python version management tool from Github if necessary.
}
\details{
This function was created to bypass the requirement for Git to be installed
when \code{\link[reticulate]{install_python}} is called on a Windows computer
without pyenv-win already installed.
pyenv-win is installed by reticulate by cloning the Github repository.
This will instead download the pyenv-win repository as a ZIP file.

Note: If pyenv-win is installed by ZIP download instead of via Git clone,
it will not be updated after the first time it is downloaded.
}
