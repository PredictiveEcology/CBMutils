// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// StepPoolsRef
void StepPoolsRef(Rcpp::NumericMatrix& pools, Rcpp::IntegerMatrix& opMatrix, Rcpp::List& flowMatrices);
RcppExport SEXP _CBMutils_StepPoolsRef(SEXP poolsSEXP, SEXP opMatrixSEXP, SEXP flowMatricesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type pools(poolsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix& >::type opMatrix(opMatrixSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type flowMatrices(flowMatricesSEXP);
    StepPoolsRef(pools, opMatrix, flowMatrices);
    return R_NilValue;
END_RCPP
}
// StepPools
Rcpp::NumericMatrix StepPools(Rcpp::NumericMatrix& pools, Rcpp::IntegerMatrix& opMatrix, Rcpp::List& flowMatrices);
RcppExport SEXP _CBMutils_StepPools(SEXP poolsSEXP, SEXP opMatrixSEXP, SEXP flowMatricesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type pools(poolsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix& >::type opMatrix(opMatrixSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type flowMatrices(flowMatricesSEXP);
    rcpp_result_gen = Rcpp::wrap(StepPools(pools, opMatrix, flowMatrices));
    return rcpp_result_gen;
END_RCPP
}
// ComputeOvermatureDecline
Rcpp::NumericMatrix ComputeOvermatureDecline(Rcpp::NumericMatrix growthIncrements, Rcpp::DataFrame& turnoverParams);
RcppExport SEXP _CBMutils_ComputeOvermatureDecline(SEXP growthIncrementsSEXP, SEXP turnoverParamsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type growthIncrements(growthIncrementsSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type turnoverParams(turnoverParamsSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeOvermatureDecline(growthIncrements, turnoverParams));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGrowthIncrements
Rcpp::NumericMatrix ComputeGrowthIncrements(Rcpp::Environment& growthIncrements, Rcpp::IntegerVector& ages, Rcpp::IntegerVector& gcids, Rcpp::NumericMatrix& pools, Rcpp::DataFrame& rootParameters, double biomassToCarbonRate, double swMult, double hwMult);
RcppExport SEXP _CBMutils_ComputeGrowthIncrements(SEXP growthIncrementsSEXP, SEXP agesSEXP, SEXP gcidsSEXP, SEXP poolsSEXP, SEXP rootParametersSEXP, SEXP biomassToCarbonRateSEXP, SEXP swMultSEXP, SEXP hwMultSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Environment& >::type growthIncrements(growthIncrementsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type gcids(gcidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type pools(poolsSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type rootParameters(rootParametersSEXP);
    Rcpp::traits::input_parameter< double >::type biomassToCarbonRate(biomassToCarbonRateSEXP);
    Rcpp::traits::input_parameter< double >::type swMult(swMultSEXP);
    Rcpp::traits::input_parameter< double >::type hwMult(hwMultSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGrowthIncrements(growthIncrements, ages, gcids, pools, rootParameters, biomassToCarbonRate, swMult, hwMult));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGrowthAndDeclineMatrices
Rcpp::List ComputeGrowthAndDeclineMatrices(Rcpp::NumericMatrix& growthIncrements, Rcpp::NumericMatrix& decline);
RcppExport SEXP _CBMutils_ComputeGrowthAndDeclineMatrices(SEXP growthIncrementsSEXP, SEXP declineSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type growthIncrements(growthIncrementsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type decline(declineSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGrowthAndDeclineMatrices(growthIncrements, decline));
    return rcpp_result_gen;
END_RCPP
}
// ComputeGrowthAndDeclineMatrices2
Rcpp::List ComputeGrowthAndDeclineMatrices2(Rcpp::Environment& growthIncrements, Rcpp::IntegerVector& ages, Rcpp::IntegerVector& gcids, Rcpp::NumericMatrix& pools, Rcpp::DataFrame& rootParameters, Rcpp::DataFrame& turnoverParams, double biomassToCarbonRate, double swMult, double hwMult);
RcppExport SEXP _CBMutils_ComputeGrowthAndDeclineMatrices2(SEXP growthIncrementsSEXP, SEXP agesSEXP, SEXP gcidsSEXP, SEXP poolsSEXP, SEXP rootParametersSEXP, SEXP turnoverParamsSEXP, SEXP biomassToCarbonRateSEXP, SEXP swMultSEXP, SEXP hwMultSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Environment& >::type growthIncrements(growthIncrementsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type gcids(gcidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type pools(poolsSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type rootParameters(rootParametersSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type turnoverParams(turnoverParamsSEXP);
    Rcpp::traits::input_parameter< double >::type biomassToCarbonRate(biomassToCarbonRateSEXP);
    Rcpp::traits::input_parameter< double >::type swMult(swMultSEXP);
    Rcpp::traits::input_parameter< double >::type hwMult(hwMultSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeGrowthAndDeclineMatrices2(growthIncrements, ages, gcids, pools, rootParameters, turnoverParams, biomassToCarbonRate, swMult, hwMult));
    return rcpp_result_gen;
END_RCPP
}
// Spinup
Rcpp::NumericMatrix Spinup(Rcpp::NumericMatrix& pools, Rcpp::IntegerMatrix opMatrix, Rcpp::List& constantProcesses, Rcpp::Environment& growthIncrements, Rcpp::IntegerVector& ages, Rcpp::IntegerVector& gcids, Rcpp::IntegerVector& historicdmids, Rcpp::IntegerVector& lastPassdmids, Rcpp::IntegerVector& delays, Rcpp::IntegerVector& minRotations, Rcpp::IntegerVector& maxRotations, Rcpp::IntegerVector& returnIntervals, Rcpp::DataFrame& rootParameters, Rcpp::DataFrame& turnoverParams, double biomassToCarbonRate, bool debug);
RcppExport SEXP _CBMutils_Spinup(SEXP poolsSEXP, SEXP opMatrixSEXP, SEXP constantProcessesSEXP, SEXP growthIncrementsSEXP, SEXP agesSEXP, SEXP gcidsSEXP, SEXP historicdmidsSEXP, SEXP lastPassdmidsSEXP, SEXP delaysSEXP, SEXP minRotationsSEXP, SEXP maxRotationsSEXP, SEXP returnIntervalsSEXP, SEXP rootParametersSEXP, SEXP turnoverParamsSEXP, SEXP biomassToCarbonRateSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix& >::type pools(poolsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type opMatrix(opMatrixSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type constantProcesses(constantProcessesSEXP);
    Rcpp::traits::input_parameter< Rcpp::Environment& >::type growthIncrements(growthIncrementsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type ages(agesSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type gcids(gcidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type historicdmids(historicdmidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type lastPassdmids(lastPassdmidsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type delays(delaysSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type minRotations(minRotationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type maxRotations(maxRotationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type returnIntervals(returnIntervalsSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type rootParameters(rootParametersSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame& >::type turnoverParams(turnoverParamsSEXP);
    Rcpp::traits::input_parameter< double >::type biomassToCarbonRate(biomassToCarbonRateSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(Spinup(pools, opMatrix, constantProcesses, growthIncrements, ages, gcids, historicdmids, lastPassdmids, delays, minRotations, maxRotations, returnIntervals, rootParameters, turnoverParams, biomassToCarbonRate, debug));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CBMutils_StepPoolsRef", (DL_FUNC) &_CBMutils_StepPoolsRef, 3},
    {"_CBMutils_StepPools", (DL_FUNC) &_CBMutils_StepPools, 3},
    {"_CBMutils_ComputeOvermatureDecline", (DL_FUNC) &_CBMutils_ComputeOvermatureDecline, 2},
    {"_CBMutils_ComputeGrowthIncrements", (DL_FUNC) &_CBMutils_ComputeGrowthIncrements, 8},
    {"_CBMutils_ComputeGrowthAndDeclineMatrices", (DL_FUNC) &_CBMutils_ComputeGrowthAndDeclineMatrices, 2},
    {"_CBMutils_ComputeGrowthAndDeclineMatrices2", (DL_FUNC) &_CBMutils_ComputeGrowthAndDeclineMatrices2, 9},
    {"_CBMutils_Spinup", (DL_FUNC) &_CBMutils_Spinup, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_CBMutils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
